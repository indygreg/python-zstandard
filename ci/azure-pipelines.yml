jobs:
- job: Source_Distribution
  pool:
    vmImage: ubuntu-16.04
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.7
  - script: |
        python setup.py sdist
    displayName: Build
  - task: PublishPipelineArtifact@1
    inputs:
      path: $(System.DefaultWorkingDirectory)/dist

- job: ManyLinuxWheel
  strategy:
    matrix:
      x64_2010_27m:
        image: quay.io/pypa/manylinux2010_x86_64
        py: cp27-cp27m
      x64_2010_27mu:
        image: quay.io/pypa/manylinux2010_x86_64
        py: cp27-cp27mu
      x64_2010_35:
        image: quay.io/pypa/manylinux2010_x86_64
        py: cp35-cp35m
      x64_2010_36:
        image: quay.io/pypa/manylinux2010_x86_64
        py: cp36-cp36m
      x64_2010_37:
        image: quay.io/pypa/manylinux2010_x86_64
        py: cp37-cp37m
      x64_2010_38:
        image: quay.io/pypa/manylinux2010_x86_64
        py: cp38-cp38
      x86_27m:
        image: quay.io/pypa/manylinux1_i686
        py: cp27-cp27m
      x86_27mu:
        image: quay.io/pypa/manylinux1_i686
        py: cp27-cp27mu
      x86_35:
        image: quay.io/pypa/manylinux1_i686
        py: cp35-cp35m
      x86_36:
        image: quay.io/pypa/manylinux1_i686
        py: cp36-cp36m
      x86_37:
        image: quay.io/pypa/manylinux1_i686
        py: cp37-cp37m
      x86_38:
        image: quay.io/pypa/manylinux1_i686
        py: cp38-cp38
  pool:
    vmImage: ubuntu-16.04
  steps:
    - script: |
        docker run -e PYPATH=/opt/python/$(py) --rm -v `pwd`:/project $(image) /project/ci/build-manylinux-wheel.sh
      displayName: Build Wheel
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: dist

- job: MacOSWheel
  strategy:
    matrix:
      Python2.7:
        cibw_build: cp27-*
      Python3.5:
        cibw_build: cp35-*
      Python3.6:
        cibw_build: cp36-*
      Python3.7:
        cibw_build: cp37-*
      Python3.8:
        cibw_build: cp38-*
  pool:
    vmImage: macOS-10.14
  variables:
    CIBW_BUILD: variables['cibw_build']
    CIBW_BUILD_VERBOSITY: '1'
  steps:
    - script: |
        pip install --require-hashes -r ci/requirements.macoswheels.txt
      displayName: Install Dependencies
    - script: |
        cibuildwheel --output-dir dist
      displayName: Build
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: dist

- template: azure-pipelines-template.yml
  parameters:
    name: Linux_x64
    os: Linux
    vmImage: ubuntu-16.04
    arch: x64

- template: azure-pipelines-template.yml
  parameters:
    name: macOS_x64
    os: macOS
    vmImage: macOS-10.14
    arch: x64

- template: azure-pipelines-template.yml
  parameters:
    name: Windows_x86
    os: Windows
    vmImage: vs2017-win2016
    arch: x86

- template: azure-pipelines-template.yml
  parameters:
    name: Windows_x64
    os: Windows
    vmImage: vs2017-win2016
    arch: x64

- template: azure-pipelines-anaconda-linux-template.yml
  parameters:
    name: Linux_Anaconda
    vmImage: ubuntu-16.04

- template: azure-pipelines-anaconda-windows-template.yml
  parameters:
    name: Windows_Anaconda
    vmImage: vs2017-win2016
